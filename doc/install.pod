=head1 Tesserae Installation

=head2 Step 1: Download

Get the code by anonymous SVN checkout:

B<% svn co svn://tesserae.caset.buffalo.edu/tesserae/trunk tesserae>

=head2 Step 2: Configure

Assuming you don't need to run the web interface, you don't need to move anything around here, just stick the whole directory wherever you want it.

To configure the program, first go into the C<perl/> subdirectory and edit the module C<TessSystemVars.pm>.  Change lines 14--23, the paths to the various directories, so that they reflect the situation on your local machine.  Change lines 25--33 so that they point to useful URLs.  The following ought to work:

   my $url_base   = 'http://tesserae.caset.buffalo.edu';

   our $url_cgi   = $url_base . '/cgi-bin';
   our $url_css   = $url_base . '/css';
   our $url_html  = $url_base;
   our $url_image = $url_base . '/images';
   our $url_text  = $url_base . '/texts';
   our $url_tmp   = $url_base . '/tmp';
   our $url_xsl   = $url_base . '/xsl';

After making these changes, run this script:

B<% perl perl/configure.pl>

That should make everything else work.

=head2 Step 3: Load the dictionaries.

The dictionaries are kept on the Subversion server as human-readable text files.  They need to be processed to generate the Storable binaries that Tesserae wants.

This reads the stem dictionaries.

B<% perl perl/build-stem-cache.pl>

This is a bit of a hack that stops the word for "eat" from being confused with the word for "be."

B<% perl perl/patch-stem-cache.pl>

After the stem dictionaries are build, then build the synonym dictionary (Latin only for now).

B<% perl perl/build-syn-cache.pl>

=head2 Step 4: Parse the texts.

Texts are stored in the C<texts/> subdirectory.  Latin texts are in C<texts/la/>, Greek are in C<texts/grc/>, and English texts are in C<texts/en/>.

Texts are added to Tesserae using the script C<perl/v3/add_column.pl>.  The arguments are the texts to be added.  As long as the texts are in a language subdirectory, it should know what language they are.

In some cases, a giant text has been split into smaller parts--for example, the Aeneid is split into its twelve books.  Usually the full text will be in the root language directory, and then there will be a subdirectory named for the text containing a bunch of C<*.part.tess> files.  C<add_column.pl> expects this arrangement.

To add the texts that came with Tesserae:

B<% perl perl/v3/add_column.pl texts/la/*>

B<% perl perl/v3/add_column.pl texts/grc/*>

B<% perl perl/v3/add_column.pl texts/en/*>

=head2 Step 5: Calculate corpus-wide statistics.

The corpus-wide word and stem counts are used in scoring.  Any time new texts are added, these stats need to be recalculated.  The script is C<perl/v3/corpus-stats.pl>.  Its arguments are the language subdirectories to process.

B<% perl perl/v3/corpus-stats.pl grc la en>

=cut